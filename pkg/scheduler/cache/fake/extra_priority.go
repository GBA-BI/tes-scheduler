// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/scheduler/cache/extra_priority.go

// Package fake is a generated GoMock package.
package fake

import (
	reflect "reflect"

	models "github.com/GBA-BI/tes-scheduler/pkg/scheduler/models"
	gomock "github.com/golang/mock/gomock"
)

// FakeExtraPriorityCache is a mock of ExtraPriorityCache interface.
type FakeExtraPriorityCache struct {
	ctrl     *gomock.Controller
	recorder *FakeExtraPriorityCacheMockRecorder
}

// FakeExtraPriorityCacheMockRecorder is the mock recorder for FakeExtraPriorityCache.
type FakeExtraPriorityCacheMockRecorder struct {
	mock *FakeExtraPriorityCache
}

// NewFakeExtraPriorityCache creates a new mock instance.
func NewFakeExtraPriorityCache(ctrl *gomock.Controller) *FakeExtraPriorityCache {
	mock := &FakeExtraPriorityCache{ctrl: ctrl}
	mock.recorder = &FakeExtraPriorityCacheMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *FakeExtraPriorityCache) EXPECT() *FakeExtraPriorityCacheMockRecorder {
	return m.recorder
}

// ListExtraPriorities mocks base method.
func (m *FakeExtraPriorityCache) ListExtraPriorities() []*models.ExtraPriorityInfo {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListExtraPriorities")
	ret0, _ := ret[0].([]*models.ExtraPriorityInfo)
	return ret0
}

// ListExtraPriorities indicates an expected call of ListExtraPriorities.
func (mr *FakeExtraPriorityCacheMockRecorder) ListExtraPriorities() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListExtraPriorities", reflect.TypeOf((*FakeExtraPriorityCache)(nil).ListExtraPriorities))
}
