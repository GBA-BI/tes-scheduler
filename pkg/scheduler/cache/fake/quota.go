// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/scheduler/cache/quota.go

// Package fake is a generated GoMock package.
package fake

import (
	context "context"
	reflect "reflect"

	models "github.com/GBA-BI/tes-scheduler/pkg/scheduler/models"
	gomock "github.com/golang/mock/gomock"
)

// FakeQuotaCache is a mock of QuotaCache interface.
type FakeQuotaCache struct {
	ctrl     *gomock.Controller
	recorder *FakeQuotaCacheMockRecorder
}

// FakeQuotaCacheMockRecorder is the mock recorder for FakeQuotaCache.
type FakeQuotaCacheMockRecorder struct {
	mock *FakeQuotaCache
}

// NewFakeQuotaCache creates a new mock instance.
func NewFakeQuotaCache(ctrl *gomock.Controller) *FakeQuotaCache {
	mock := &FakeQuotaCache{ctrl: ctrl}
	mock.recorder = &FakeQuotaCacheMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *FakeQuotaCache) EXPECT() *FakeQuotaCacheMockRecorder {
	return m.recorder
}

// GetAccountQuota mocks base method.
func (m *FakeQuotaCache) GetAccountQuota(ctx context.Context, accountID string) (*models.ResourceQuota, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAccountQuota", ctx, accountID)
	ret0, _ := ret[0].(*models.ResourceQuota)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAccountQuota indicates an expected call of GetAccountQuota.
func (mr *FakeQuotaCacheMockRecorder) GetAccountQuota(ctx, accountID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAccountQuota", reflect.TypeOf((*FakeQuotaCache)(nil).GetAccountQuota), ctx, accountID)
}

// GetGlobalQuota mocks base method.
func (m *FakeQuotaCache) GetGlobalQuota(ctx context.Context) (*models.ResourceQuota, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetGlobalQuota", ctx)
	ret0, _ := ret[0].(*models.ResourceQuota)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetGlobalQuota indicates an expected call of GetGlobalQuota.
func (mr *FakeQuotaCacheMockRecorder) GetGlobalQuota(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetGlobalQuota", reflect.TypeOf((*FakeQuotaCache)(nil).GetGlobalQuota), ctx)
}

// GetUserQuota mocks base method.
func (m *FakeQuotaCache) GetUserQuota(ctx context.Context, accountID, userID string) (*models.ResourceQuota, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserQuota", ctx, accountID, userID)
	ret0, _ := ret[0].(*models.ResourceQuota)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUserQuota indicates an expected call of GetUserQuota.
func (mr *FakeQuotaCacheMockRecorder) GetUserQuota(ctx, accountID, userID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserQuota", reflect.TypeOf((*FakeQuotaCache)(nil).GetUserQuota), ctx, accountID, userID)
}
